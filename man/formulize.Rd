% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formulize.R
\name{formulize}
\alias{formulize}
\title{Generate formulas for single- and multilevel linear modeling}
\usage{
formulize(.outcome, ..., .clustering, .random_slopes = NULL, .ranef_cor = TRUE)
}
\arguments{
\item{.outcome}{A character vector of outcome names.}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Optional.
Character vectors of predictor names.}

\item{.clustering}{Optional. The cluster structure
to specify random intercepts for multilevel formulas.}

\item{.random_slopes}{Optional. A list of character vectors
of predictor names for which random slopes should be included in the formula.
Only relevant if \code{.clustering} is specified.}

\item{.ranef_cor}{A logical indicating whether
random intercepts and slopes should be correlated.
Only relevant if \code{.random_slopes} is specified.
The default is TRUE.}
}
\value{
A character vector of formula expressions.
}
\description{
This function generates formula expressions from vectors of
outcome and predictor names for single- and multilevel linear models to be
fitted with \code{stats::lm()} and \code{lme4::lmer()}, respectively.
This function is especially helpful for generating a
large number of formulas with varying outcomes and predictors at once.
}
\details{
\itemize{
\item Generating a \strong{single-level} formula for models to be fitted
with \code{stats::lm()} simply requires not specifying \code{.clustering}.
\item Generating a \strong{multilevel} formula for models to be fitted with
\code{lme4::lmer()} requires the specification of one or multiple nested cluster
identifiers in \code{.clustering}. So far, only one single random effects term
of the form "\verb{(random expression | .clustering)}" can be expressed.
\itemize{
\item To express a formula for a simple two-level model,
specify a single cluster identifier
(e.g., "\code{.clustering = id_schools}").
To express a formula for a multilevel model with more than two
hierarchical (i.e., nested) levels, specify multiple cluster
identifiers separated by a slash, beginning with the highest level
(e.g., "\code{.clustering = id_schools / id_classrooms}").
\item \code{.random_slopes} is only evaluated if \code{.clustering} is specified.
The input has to be a list as created with \code{list()} (e.g.,
for including a random slope term for vector "\code{x1}", specify
"\code{.random_slopes = list(x1)}").
If no slopes are specified, a formula for a
random intercept model is generated (i.e., "\code{(1 | .clustering)}").
\item If applicable, (i.e., if \code{.clustering} and \code{.random_slopes}
are specified), \code{.ranef_cor}, by default, includes a term for
correlated random effects in the formula,
which corresponds to one vertical bar operator as used in
\strong{lme4} (i.e., "\code{|}"). Setting \code{.ranef_cor} to FALSE corresponds
to two vertical bar operators as used in \strong{lme4} (i.e., "\code{||}")
and leads to including a term for uncorrelated random effects.
}

\item If an element in \code{.outcome} is \code{NA}, the output for this element
will also be \code{NA}.
\item \code{...} also takes a list of character vectors of predictor names that
can be spliced with \verb{!!!}.
\item It is possible to include a varying number of predictors for each
outcome by setting the corresponding entries in the character vectors
specified in \code{...} and/or the list of character vectors specified
in \code{.random_slopes}  to \code{NA}.
}
}
\examples{
# Formulize single-level models with one or two predictors
formulize(.outcome = c("y1", "y2"), c("x1", "x2"), c(NA, "z2"))
# [1] "y1 ~ 1 + x1"
# [2] "y2 ~ 1 + x2 + z2"

# Formulize a three-level model with random intercepts
formulize(.outcome = c("y1", "y2"), c("x1", "x2"), c(NA, "z2"),
.clustering = id_schools/id_classrooms)
# [1] "y1 ~ 1 + x1 + (1 | id_schools/id_classrooms)"
# [2] "y2 ~ 1 + x2 + z2 + (1 | id_schools/id_classrooms)"

# Formulize a two-level model with random intercept and slopes
formulize(.outcome = c("y1", "y2"), c("x1", "x2"), c(NA, "z2"),
.clustering = id_schools,
.random_slopes = list(c("x1", "x2"), c(NA, "z2")))
# [1] "y1 ~ 1 + x1 + (1 + x1 | id_schools)"
# [2] "y2 ~ 1 + x2 + z2 + (1 + x2 + z2 | id_schools)"
}
\seealso{
See the \strong{stats} and \strong{lme4} packages.
}
