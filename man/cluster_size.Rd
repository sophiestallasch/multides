% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_size.R
\name{cluster_size}
\alias{cluster_size}
\title{Compute cluster sizes in multilevel designs}
\usage{
cluster_size(data, ..., .fns, .total = FALSE)
}
\arguments{
\item{data}{A data frame.}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}>
The names or column numbers of the identifiers depicting the cluster
structure in ascending order (e.g., students, classrooms, schools:
\verb{id_student, id_classroom, id_school}). At least two identifiers must be
specified. Note that if \code{.fns} is not supplied, the first identifier will be
the first column in the new data frame.}

\item{.fns}{Optional. A list of function/s to compute summary statistics
across cluster sizes (e.g., median cluster size:
\code{.fns = list("mdn" = median)})}

\item{.total}{Optional. A logical indicating whether the number of unique
observations at each hierarchical level should be summed up. If TRUE, the
total sample size at each hierarchical level is included in the new data
frame. The default is FALSE.}
}
\value{
A data frame.
}
\description{
This function counts the number of unique observations within
each of the user-defined clusters in the context of multilevel
(i.e., clustered or nested) data with an arbitrary number of hierarchical
levels (L).
For example, when students at L1 are nested within classrooms at L2, which
are in turn nested within schools at L3, the function computes the cluster
size at L2 (i.e., number of students per classroom) and the cluster sizes
at L3 (i.e., number of students per school and number of classrooms per
school).
By default, cluster sizes are returned broken down by L1 unit.
Instead of returning cluster sizes broken down by L1 unit, it is also
possible to compute summary statistics by supplying the respective summary
functions to the \code{.fns} argument.
Total sample sizes at each hierarchical level can be included via the
\code{.total}argument.
}
\examples{

# compute cluster sizes in a three-level design
# (e.g., students within classrooms within schools)
cluster_size(studach, id_stu, id_cla, id_sch)

# compute median cluster sizes in a two-level design
# (e.g., students within schools) and include total
# and include total sample sizes at each hierarchical level
cluster_size(studach, id_stu, id_sch,
             .fns = list("mdn" = median),
             .total = TRUE)
}
