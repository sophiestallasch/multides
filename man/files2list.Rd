% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/files2list.R
\name{files2list}
\alias{files2list}
\alias{rda2list}
\alias{dat2list}
\alias{csv2list}
\title{Load Multiple Data Files into one List}
\usage{
rda2list(.path = ".", .file_pattern = ".rda$", .recursive = FALSE)

dat2list(
  .path = ".",
  .file_pattern = ".dat$",
  .recursive = FALSE,
  .sep = ";",
  .dec = ".",
  .header = TRUE
)

csv2list(
  .path = ".",
  .file_pattern = ".csv$",
  .recursive = FALSE,
  .sep = ";",
  .dec = ".",
  .header = TRUE
)
}
\arguments{
\item{.path}{A string indicating the path of the directory
that contains the files to be loaded. The default is the
current working directory.}

\item{.file_pattern}{A regular expression to return the files that
this regular expression matches.
\itemize{
\item For \code{rda2list()} the default is to load all files ending with ".rda"
\item For \code{dat2list()} the default is to load all files ending with ".dat"
\item For \code{csv2list()} the default is to load all files ending with ".csv"
}}

\item{.recursive}{A logical indicating whether to recurse
into directories. The default is FALSE.}

\item{.sep}{The field separator character.
The default is a semicolon.}

\item{.dec}{The decimal point character used in the files.
The default is a point.}

\item{.header}{A logical indicating whether the files have a column header.}
}
\value{
A list that contains the files in \code{.path} matching
the expression specified in \code{.file_pattern}.
}
\description{
These functions load multiple data files
from a specified directory and save them into one list.
\itemize{
\item \code{rda2list()} loads multiple .rda files
\item \code{dat2list()} loads multiple .dat files
\item \code{csv2list()} loads multiple .csv files
}
}
\examples{
# load all .rda files in the current working directory into one list
rda2list()
# load all .dat files in the current working directory into one list
dat2list()
# load all .csv files in the current working directory into one list
csv2list()

}
\seealso{
See also \code{utils::read.table()}.
}
